---

- name: Ruby | bundler is installed (via ansible module)
  # This does not support chruby. The bundler gem get installed in
  # '~/.gem/ruby/2.2.0' instead of '~/.gem/ruby/2.2.4'.
  when: no
  gem:
    name: bundler
    version: "{{ bundler_version }}"
    state: present
  environment:
    PATH: "{{ ruby_env_path | join (':') }}"
    GEM_HOME: "{{ ansible_env.HOME }}/.gem/ruby/{{ ruby_version }}"
    RUBY_ENGINE: ruby
    GEM_ROOT: "{{ ansible_env.HOME }}/.rubies/{{ ruby_version }}/lib/ruby/gems/2.2.0"
    GEM_PATH: "{{ ruby_env_gem_path | join (':') }}"
    RUBY_ROOT: "{{ ansible_env.HOME }}/.rubies/{{ ruby_version }}"
    RUBY_VERSION: "{{ ruby_version }}"
  vars:
    ruby_env_path:
      - "{{ ansible_env.HOME }}/.gem/ruby/{{ ruby_version }}/bin"
      - "{{ ansible_env.HOME }}/.rubies/{{ ruby_version }}/lib/ruby/gems/2.2.0/bin"
      - "{{ ansible_env.HOME }}/.rubies/{{ ruby_version }}/bin"
    ruby_env_gem_path:
      - "{{ ansible_env.HOME }}/.gem/ruby/{{ ruby_version }}"
      - "{{ ansible_env.HOME }}/.rubies/{{ ruby_version }}/lib/ruby/gems/2.2.0"
  tags: [ bundler, ruby-bundler-ansible-gem ]

- name: Ruby | bundler is installed (via shell)
  shell:
    source $HOME/local/share/chruby/chruby.sh &&
    source $HOME/local/share/chruby/auto.sh &&
    chruby {{ ruby_version }} &&
    gem install bundler -v {{ bundler_version }}
  args:
    executable: /bin/bash
  tags: [ bundler ]
